# -*- MakeFile -*-

# The purpose of this makefile is compile all the required .o files
# for external dependencies so they can be linked together with internal
# .cpp files

BUILD_DIR = dependencies

GLFW_SOURCES = \
# GLFW/src/monitor.c \
# GLFW/src/window.c \
# GLFW/src/win32_monitor.c \
# GLFW/src/win32_window.c \
# GLFW/src/init.c \
# GLFW/src/input.c \
# GLFW/src/context.c \
# GLFW/src/win32_init.c \
# GLFW/src/win32_thread.c \
# GLFW/src/win32_time.c \
# GLFW/src/win32_joystick.c \
# GLFW/src/wgl_context.c \
# GLFW/src/egl_context.c \
# GLFW/src/osmesa_context.c \
# GLFW/src/vulkan.c

GLEW_SOURCES = \
GLEW/src/glew.c

C_SOURCES += $(GLFW_SOURCES)
C_SOURCES += $(GLEW_SOURCES)

C_INCLUDES = \
-IGLFW/include \
-IGLFW/src \
-IGLEW/include \

# Create list of all the object files (.o files)
C_OBJECTS = $(patsubst %.c, %.o, $(C_SOURCES))

# Create list of all the objects without the directory
C_OBJECTS_NO_DIR = $(foreach D, $(C_OBJECTS), $(BUILD_DIR)/$(notdir $(D)))

# Create list of dependcy files (.d files). These files are used by the
# compiler to ensure that any .cpp file that includes a .h file that has
# changed is recompiled
C_DEPENDENCIES = $(patsubst %.c, $(BUILD_DIR)/%.d, $(C_SOURCES))
-include $(C_DEPENDENCIES)

# Optimisation flags
OPT = -Og

# Compile using g++ (compiler for c++)
CC=gcc

# Ensures .cpp files are recompiled if header files are edited 
DEPENDENCY_FLAGS = -MP -MD

C_FLAGS = -Wall $(C_INCLUDES) $(DEPENDENCY_FLAGS) $(OPT)

# Build the dependency $(TARGET)
all: $(BUILD_DIR) $(C_OBJECTS)

# Delete build directory
clean:
	@rmdir /s /q $(BUILD_DIR)

# Generic recipe for making .o files from .c files
%.o:%.c
	$(CC) $(C_FLAGS) -c -o $(BUILD_DIR)/$(notdir $@) $^

# Recipe to create build folder
$(BUILD_DIR):
	mkdir $@

.PHONY: all run clean